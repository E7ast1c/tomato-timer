{"version":3,"sources":["components/Clock.jsx","components/LocalStorageManager.js","components/Time.jsx","components/RESTApi.js","components/Header/RegisterModal.jsx","components/Header/SettingsModal.jsx","components/Header/LoiginModal.jsx","components/Header/Header.jsx","components/FakeTime.jsx","components/Main.jsx","App.js","reportWebVitals.js","Store/Actions/actions.js","Store/rootReducer.js","Store/store.js","index.js"],"names":["Clock","props","prop","params","useEffect","timer","setInterval","setProgress","prevProgress","clearInterval","Box","display","alignItems","justifyContent","width","mr","LinearProgress","variant","value","progress","minWidth","Typography","Math","round","getLocalStorageKey","key","localStorage","getItem","JSON","parse","useStyles","makeStyles","flexDirection","marginTop","btn","margin","Time","timeDuaration","classes","useState","useTimer","expiryTimestamp","expiry","Date","setSeconds","getSeconds","getExpiryDate","onExpire","console","warn","seconds","minutes","isRunning","hours","days","start","pause","resume","restart","className","style","alignContent","Button","color","onClick","setActiveTimerDispatcher","login","userData","a","Headers","fetch","method","cache","body","stringify","response","json","theme","modal","paper","backgroundColor","border","boxShadow","shadows","padding","spacing","emailMargin","btnGroup","Register","useForm","register","handleSubmit","errors","formState","email","password","weight","weightRange","showPassword","values","setValues","handleChange","event","target","handleClose","setRegisterModal","Modal","open","onClose","aria-labelledby","aria-describedby","onSubmit","data","log","TextField","id","placeholder","clsx","textField","onChange","required","pattern","message","txtError","FormControl","InputLabel","htmlFor","Input","type","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","input","settingsTime","SettingModal","timeKey","valueInputTime","setvalueInputTime","isDisabled","setIsDisabled","onSaveHandler","setItem","setSettingsModal","setCurrentDuarationTime","e","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","root","noValidate","autoComplete","label","disabled","LoiginModal","then","setIsLogIn","toolbar","borderBottom","toolbarButton","borderColor","marginLeft","toolbarIcon","marginRight","toolbarTitle","flex","toolbarSecondary","overflowX","toolbarLink","flexShrink","Header","registerModal","settingsModal","isLogIn","Fragment","Toolbar","size","component","align","noWrap","time","moment","format","Main","activeTimerDispatcher","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CHANGE_TIMER_ACTION","initialState","rootReducer","combineReducers","state","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a7203fb.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport PropTypes from \"prop-types\";\n\nconst Clock = (props) => {\n  const prop = props.params;\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      prop.setProgress((prevProgress) =>\n        prevProgress >= 100 ? 100 : prevProgress + 1\n      );\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  });\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Box width=\"60%\" mr={1}>\n        <LinearProgress variant=\"determinate\" value={prop.progress} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\">{`${Math.round(\n          prop.progress\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nClock.propTypes = {\n  params: PropTypes.object.isRequired,\n};\n\nexport default Clock;\n","export function setLocalStorageKey(key, value) {\n  if (value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  } else {\n    return;\n  }\n}\n\nexport function getLocalStorageKey(key) {\n  if (localStorage.getItem(key)) {\n    const time = JSON.parse(localStorage.getItem(\"Time\"));\n    return time;\n  } else {\n    return 1;\n  }\n}\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { useTimer } from \"react-timer-hook\";\nimport PropTypes from \"prop-types\";\n\nimport Clock from \"./Clock\";\nimport ViewClock from \"./FakeProgress\";\n\nimport { getLocalStorageKey } from \"./LocalStorageManager\";\n\nconst useStyles = makeStyles({\n  timer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"32vh\",\n  },\n  btn: {\n    margin: \".2rem\",\n  },\n});\n\nexport default function Time(props) {\n  const timeKey = \"Time\";\n\n  // ---- Convert in minutes ------\n  const timeDuaration = getLocalStorageKey(timeKey) * 60;\n\n  function getExpiryDate(timeDuaration) {\n    let expiry = new Date();\n    expiry.setSeconds(expiry.getSeconds() + timeDuaration);\n    return expiry;\n  }\n\n  const classes = useStyles();\n\n  const [clockEnabled, setClockEnabled] = useState(false);\n  const [pauseClock, setPauseClock] = useState(false);\n  const [progress, setProgress] = useState(1);\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart,\n  } = useTimer({\n    expiryTimestamp: getExpiryDate(timeDuaration),\n    onExpire: () => console.warn(\"onExpire called\"),\n  });\n\n  return (\n    <div className={classes.timer}>\n      <div\n        style={{\n          display: \"flex\",\n          alignContent: \"center\",\n          justifyContent: \"center\",\n        }}\n      ></div>\n\n      <div>\n        <p>{isRunning ? \"Timer running\" : \"Timer stopped\"}</p>\n        {`${minutes < 10 ? `0${minutes}` : minutes}:${\n          seconds < 10 ? `0${seconds}` : seconds\n        }`}\n      </div>\n      <Clock params={{ progress, setProgress }} />\n\n      <div>\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={start}\n        >\n          Start\n        </Button>\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => props.setActiveTimerDispatcher(false)}\n        >\n          Stop\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nTime.propTypes = {\n  setActiveTimerDispatcher: PropTypes.func.isRequired,\n};\n","const requestURL = `http://192.168.31.174:8080`;\n\n// export function getData(method, url) {\n//   return fetch(url).then((response) => {\n//     return response.json();\n//   });\n// }\n\n// let updateData = getData(\"GET\", requestURL)\n//   .then((data) => {})\n//   .catch((er) => console.error(`Error fatch ${er}`));\n\nexport async function login(userData) {\n  // console.log(userData)\n\n  const url = \"http://192.168.31.174:8080/login\";\n\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    // \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n  });\n\n  const response = await fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    // mode: 'cors', // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // origin: 'http://192.168.31.174:8080',\n    //   credentials: 'include',\n    //  headers: myHeaders,\n    // redirect: 'follow', // manual, *follow, error\n    //  referrerPolicy: 'no-referrer', // no-referrer, *client\n    body: JSON.stringify(userData), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n// export async function register(login, email, password) {\n//   let userData = { email, password };\n//   try {\n//     let response = await fetch(`${requestURL}/register`, {\n//       method: \"POST\",\n//       mode: \"no-cors\",\n//       headers: {\n//         \"Content-Type\": \"application/json;charset=utf-8\",\n//       },\n//       body: JSON.stringify(userData),\n//     });\n//     console.log(response);\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\nexport async function register(login, email, password) {\n  let userData = { email, password };\n  console.log(userData);\n\n  let response = await fetch(`${requestURL}/register`, {\n    method: \"POST\",\n    mode: \"no-cors\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(userData),\n  });\n  console.log(response);\n}\n","import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport Modal from \"@material-ui/core/Modal\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PropTypes from \"prop-types\";\n\nimport { register } from \"../RESTApi\";\n\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"25em\",\n    backgroundColor: \"#f2f3f4\",\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4, 5, 4),\n  },\n  emailMargin: {\n    marginTop: \"0.8em\",\n  },\n  btnGroup: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    marginTop: \"1.2em\",\n  },\n}));\n\nexport default function Register(props) {\n  const prop = props.prop;\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => {\n    // login(data);\n\n    console.log(data);\n  };\n\n  const classes = useStyles();\n  // const [modalStyle] = React.useState(getModalStyle);\n  const [values, setValues] = useState({\n    login: \"\",\n    email: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false,\n  });\n\n  useEffect(() => {\n    // console.log(prop);\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    prop.setRegisterModal(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        className={classes.modal}\n        open={true}\n        onClose={() => prop.setRegisterModal(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className={classes.paper}>\n              <TextField\n                id=\"login\"\n                placeholder=\"Login\"\n                className={clsx(classes.margin, classes.textField)}\n                onChange={handleChange(\"login\")}\n                value={values.login}\n              />\n              <TextField\n                id=\"email\"\n                placeholder=\"Email\"\n                className={clsx(\n                  classes.margin,\n                  classes.textField,\n                  classes.emailMargin\n                )}\n                onChange={handleChange(\"email\")}\n                // value={values.email}\n                {...register(\"email\", {\n                  required: true,\n                  pattern: {\n                    value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\n                    message: \"massage error\",\n                  },\n                })}\n              />\n              {errors.email && (\n                <p className={classes.txtError}>\n                  Please enter correct email, example@ya.ru\n                </p>\n              )}\n              <FormControl className={clsx(classes.margin, classes.textField)}>\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <Input\n                  id=\"password\"\n                  type={values.showPassword ? \"text\" : \"password\"}\n                  value={values.password}\n                  onChange={handleChange(\"password\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {values.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n              <div className={classes.btnGroup}>\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    register(values.login, values.email, values.password);\n                    handleClose();\n                  }}\n                >\n                  Ok\n                </Button>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={handleClose}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nRegister.propTypes = {\n  prop: PropTypes.object.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nimport { setLocalStorageKey } from \"../LocalStorageManager\";\nimport { getLocalStorageKey } from \"../LocalStorageManager\";\n\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    width: \"18em\",\n    backgroundColor: \"#f2f3f4\",\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[4],\n    padding: theme.spacing(2, 5, 3),\n  },\n  input: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    marginTop: \"1.2em\",\n  },\n  settingsTime: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  input: {\n    width: \"5em\",\n  },\n}));\n\nexport default function SettingModal(props) {\n  const prop = props.prop;\n\n  const classes = useStyles();\n  const timeKey = \"Time\";\n  const [valueInputTime, setvalueInputTime] = useState(\n    getLocalStorageKey(timeKey)\n  );\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  // const {\n  //   register,\n  //   handleSubmit,\n  //   formState: { errors },\n  // } = useForm();\n  // const onSubmit = (data) => console.log(data);\n\n  useEffect(() => {\n    valueInputTime >= 1 ? setIsDisabled(false) : setIsDisabled(true);\n  }, [valueInputTime]);\n\n  function onSaveHandler() {\n    setLocalStorageKey(timeKey, valueInputTime);\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={true}\n        onClose={() => props.prop.setSettingsModal(false)}\n        // onSubmit={(e) => e.preventDefault()}\n\n        onSubmit={() => {\n          onSaveHandler();\n          props.prop.setSettingsModal(false);\n          props.prop.setCurrentDuarationTime(valueInputTime);\n        }}\n        onClick={(e) => e.preventDefault()}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <div className={classes.paper}>\n          <h2 id=\"transition-modal-title\">Settings</h2>\n          <div\n            id=\"transition-modal-description\"\n            className={classes.settingsTime}\n          >\n            <h3>Enter pomidoro time</h3>\n            <form\n              // onSubmit={handleSubmit(onSubmit)}\n              className={classes.root}\n              noValidate\n              autoComplete=\"off\"\n            >\n              {/* <input {...register(\"age\", { min: 18, max: 99 })} />\n              {errors.age && (\n                <p>You Must be older then 18 and younger then 99 years old</p>\n              )} */}\n              <TextField\n                type=\"number\"\n                className={classes.input}\n                id=\"outlined-basic\"\n                label=\"Minutes\"\n                variant=\"outlined\"\n                onChange={(e) => setvalueInputTime(e.target.value)}\n                value={valueInputTime}\n              />\n            </form>\n          </div>\n          <div className={classes.btnGroup}>\n            <Button\n              disabled={isDisabled}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => {\n                onSaveHandler();\n                prop.setSettingsModal(false);\n                prop.setCurrentDuarationTime(valueInputTime);\n              }}\n            >\n              Save\n            </Button>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                props.prop.setSettingsModal(false);\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      {}\n    </div>\n  );\n}\n\nSettingModal.propTypes = {\n  prop: PropTypes.object.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Header from \"./Header\";\nimport PropTypes from \"prop-types\";\n\nimport { login } from \"../RESTApi\";\n\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"25em\",\n    backgroundColor: \"#f2f3f4\",\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5, 5, 5),\n  },\n  btnGroup: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    marginTop: \"1.2em\",\n  },\n  txtError: {\n    margin: \"0.2em\",\n    color: \"tomato\",\n  },\n}));\n\nexport default function LoiginModal(props) {\n  const prop = props.prop;\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    login(data).then((data) => {\n      console.log(\"this response\", data); // JSON data parsed by `response.json()` call\n    });\n  };\n  // console.log(errors);\n\n  const classes = useStyles();\n  // const [modalStyle] = React.useState(getModalStyle);\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false,\n  });\n\n  // useEffect(() => {\n  //   // console.log(prop);\n  // });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    prop.setIsLogIn(false);\n  };\n\n  // const handleLogin = async () => {\n  //   login().then((data) => {\n  //     console.log(data); // JSON data parsed by `response.json()` call\n  //   });\n  // }\n\n  return (\n    <div>\n      <Modal\n        className={classes.modal}\n        open={true}\n        onClose={() => prop.setIsLogIn(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className={classes.paper}>\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\n              <TextField\n                id=\"email\"\n                // type={values.showPassword ? \"text\" : \"email\"}\n                // value={values.password}\n                className={clsx(classes.margin, classes.textField)}\n                onChange={handleChange(\"email\")}\n                type=\"text\"\n                placeholder=\"Email\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: {\n                    value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\n                    message: \"massage error\",\n                  },\n                })}\n              />\n              {errors.email && (\n                <p className={classes.txtError}>\n                  Please enter correct email, example@ya.ru\n                </p>\n              )}\n              <FormControl className={clsx(classes.margin, classes.textField)}>\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <Input\n                  id=\"password\"\n                  type={values.showPassword ? \"text\" : \"password\"}\n                  // value={values.password}\n                  onChange={handleChange(\"password\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {values.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  {...register(\"password\", {\n                    required: true,\n                    pattern: {\n                      value: /(?=.{4,})/,\n                      message: \"error message\",\n                    },\n                  })}\n                />\n                {errors.password && (\n                  <p className={classes.txtError}>\n                    You must enter more than 8 characters\n                  </p>\n                )}\n              </FormControl>\n              <div className={classes.btnGroup}>\n                <input\n                  type=\"submit\"\n                  value=\"Ok\"\n                  // onClick={() => {\n                  //   login(values.email, values.password);\n                  //   handleClose();\n                  // }}\n                />\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  // onClick={() =>\n                  //   handleLogin()\n                  // handleClose();\n                  // }\n                >\n                  Ok\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={handleClose}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nLoiginModal.propTypes = {\n  prop: PropTypes.object.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Register from \"./RegisterModal\";\nimport SettingModal from \"./SettingsModal\";\nimport LoiginModal from \"./LoiginModal\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid `,\n  },\n  toolbarButton: {\n    color: \"white\",\n    borderColor: \"white\",\n    marginLeft: \"1em\",\n  },\n  toolbarIcon: {\n    marginLeft: \"1em\",\n    marginRight: \"2em\",\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    overflowX: \"auto\",\n  },\n  toolbarLink: {\n    flexShrink: 0,\n  },\n}));\n\nexport default function Header(props) {\n  const setCurrentDuarationTime = props.setCurrentDuarationTime;\n  const [registerModal, setRegisterModal] = useState(false);\n  const [settingsModal, setSettingsModal] = useState(false);\n  const [isLogIn, setIsLogIn] = useState(false);\n  const classes = useStyles();\n  const title = \"Tomato timer\";\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <GitHubIcon className={classes.toolbarIcon} />\n        <Button\n          className={classes.toolbarButton}\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={() => setSettingsModal(!settingsModal)}\n        >\n          Settings\n        </Button>\n\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          // color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n\n        <Toolbar className={classes.toolbarSecondary}>\n          <Button\n            className={classes.toolbarButton}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setIsLogIn(!isLogIn)}\n          >\n            Log in\n          </Button>\n          <Button\n            className={classes.toolbarButton}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setRegisterModal(!registerModal)}\n          >\n            Register\n          </Button>\n        </Toolbar>\n      </Toolbar>\n      {isLogIn && <LoiginModal prop={{ isLogIn, setIsLogIn }} />}\n      {registerModal && <Register prop={{ registerModal, setRegisterModal }} />}\n      {settingsModal && (\n        <SettingModal prop={{ setSettingsModal, setCurrentDuarationTime }} />\n      )}\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  setCurrentDuarationTime: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { getLocalStorageKey } from \"./LocalStorageManager\";\nimport moment from \"moment\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles({\n  timer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"32vh\",\n  },\n  btn: {\n    margin: \".2rem\",\n  },\n});\n\nexport default function Time(props) {\n  const classes = useStyles();\n  const timeKey = \"Time\";\n  // ----- Convert in minutes ------\n  const time = getLocalStorageKey(timeKey) * 60000;\n\n  return (\n    <div className={classes.timer}>\n      <div\n        style={{\n          display: \"flex\",\n          alignContent: \"center\",\n          justifyContent: \"center\",\n        }}\n      ></div>\n      <div>\n        <p>{\"Timer stopped\"}</p>\n        {moment(time).format(\"mm:ss\")}\n      </div>\n\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n        <Box width=\"60%\" mr={1}>\n          <LinearProgress variant=\"determinate\" value={0} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\">{\"0%\"}</Typography>\n        </Box>\n      </Box>\n      <div>\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            props.setActiveTimerDispatcher(true);\n          }}\n        >\n          Start\n        </Button>\n        <Button className={classes.btn} variant=\"contained\" color=\"secondary\">\n          Stop\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nTime.propTypes = {\n  setActiveTimerDispatcher: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Time from \"./Time\";\nimport Header from \"./Header/Header\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FakeTime from \"./FakeTime\";\n\nconst useStyles = makeStyles({\n  timer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"32vh\",\n  },\n  btn: {\n    margin: \".2rem\",\n  },\n});\n\nexport default function Main() {\n  const [activeTimerDispatcher, setActiveTimerDispatcher] = useState(false);\n  const classes = useStyles();\n  const [currentDuarationTime, setCurrentDuarationTime] = useState(1);\n\n  return (\n    <div>\n      <Header setCurrentDuarationTime={setCurrentDuarationTime} />\n      {activeTimerDispatcher ? (\n        <Time setActiveTimerDispatcher={setActiveTimerDispatcher} />\n      ) : (\n        <FakeTime setActiveTimerDispatcher={setActiveTimerDispatcher} />\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from 'react';\n\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Main/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PAUSE_TIMER, START_TIMER, STOP_TIMER } from \"./actionsTypes\";\n\nexport function startTimer(type){\n  return{\n    type: CHANGE_TIMER_ACTION,\n    value: type,\n  };\n}\n\nexport const CHANGE_TIMER_ACTION = 'CHANGE_TIMER_ACTION';\n\n","import { combineReducers } from \"redux\";\nimport { CHANGE_TIMER_ACTION } from \"./Actions/actions\";\n\nconst initialState = {\n  value: \"\",\n};\n\nexport function TimerReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_TIMER_ACTION:\n      return { ...state, value: action.value };\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers({\n  timer: TimerReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { rootReducer } from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/store\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  //  </React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}