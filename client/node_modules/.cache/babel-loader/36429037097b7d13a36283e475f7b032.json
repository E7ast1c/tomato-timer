{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Clock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Clock = () => {\n  _s();\n\n  const [currentCount, setCount] = useState(10);\n\n  const timer = () => setCount(currentCount - 1);\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      return;\n    }\n\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, [currentCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Clock, \"IMfPDr4HP4VZftxIKYb1PRi6LuY=\");\n\n_c = Clock;\n\nconst App = () => /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 19\n}, this);\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Clock\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Clock.jsx"],"names":["React","useState","useEffect","ReactDOM","Clock","currentCount","setCount","timer","id","setInterval","clearInterval","App"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BL,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMM,KAAK,GAAG,MAAMD,QAAQ,CAACD,YAAY,GAAG,CAAhB,CAA5B;;AAEAH,EAAAA,SAAS,CACL,MAAM;AACF,QAAIG,YAAY,IAAI,CAApB,EAAuB;AACnB;AACH;;AACD,UAAMG,EAAE,GAAGC,WAAW,CAACF,KAAD,EAAQ,IAAR,CAAtB;AACA,WAAO,MAAMG,aAAa,CAACF,EAAD,CAA1B;AACH,GAPI,EAQL,CAACH,YAAD,CARK,CAAT;AAWA,sBAAO;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAhBD;;GAAMD,K;;KAAAA,K;;AAkBN,MAAMO,GAAG,GAAG,mBAAM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QAAlB;;MAAMA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Clock = () => {\n    const [currentCount, setCount] = useState(10);\n    const timer = () => setCount(currentCount - 1);\n\n    useEffect(\n        () => {\n            if (currentCount <= 0) {\n                return;\n            }\n            const id = setInterval(timer, 1000);\n            return () => clearInterval(id);\n        },\n        [currentCount]\n    );\n\n    return <div>{currentCount}</div>;\n};\n\nconst App = () => <Clock />;"]},"metadata":{},"sourceType":"module"}