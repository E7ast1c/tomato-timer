{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nfunction LinearProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      width: \"60%\",\n      mr: 1,\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      minWidth: 10,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LinearProgressWithLabel;\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  // value: PropTypes.number.isRequired,\n  // value: 40,\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function Timer() {\n  _s();\n\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(1);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"qGL2MEKAGF+9xO0py7FwnAmlpdc=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Timer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinearProgressWithLabel\");\n$RefreshReg$(_c2, \"Timer\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Timer.jsx"],"names":["React","PropTypes","makeStyles","LinearProgress","Typography","Box","Button","LinearProgressWithLabel","props","Math","round","value","propTypes","useStyles","theme","root","width","button","margin","spacing","Timer","classes","progress","setProgress","useState","useEffect","timer","setInterval","prevProgress","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACtC,sBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAwC,IAAA,cAAc,EAAC,QAAvD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAA,WAA0CA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,EAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,kBAA8B,GAAEC,IAAI,CAACC,KAAL,CAC9BF,KAAK,CAACG,KADwB,CAE9B;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQJ,uB;AAcTA,uBAAuB,CAACK,SAAxB,GAAoC;AAClC;AACF;AACA;AACA;AACE;AACA;AANkC,CAApC;AASA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,MAAM,EAAE;AACN,aAAS;AACPC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADD;AADH;AAJ+B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BvB,KAAK,CAACwB,QAAN,CAAe,CAAf,CAAhC;AAEAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BJ,MAAAA,WAAW,CAAEK,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,EAAtB,GAA2BA,YAAY,GAAG,CAA9D,CAAX;AACD,KAFwB,EAEtB,IAFsB,CAAzB;AAGA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD;AAGD,GAPD,EAOG,EAPH;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACN,IAAxB;AAAA,6BACE,QAAC,uBAAD;AAAyB,QAAA,KAAK,EAAEO;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAED,OAAO,CAACJ,MAAxB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAhCuBG,K;UACNP,S;;;MADMO,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Box width=\"60%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={10}>\n        <Typography variant=\"body2\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  // value: PropTypes.number.isRequired,\n  // value: 40,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    '& > *': {\n      margin: theme.spacing(1),\n    }\n  }\n}));\n\nexport default function Timer() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(1);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1));\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <LinearProgressWithLabel value={progress} />\n      </div>\n      <div className={classes.button}>\n        <Button variant=\"contained\" color=\"primary\">\n          Start\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Stop\n        </Button>\n      </div>\n    </div>\n\n     \n\n  );\n\n}"]},"metadata":{},"sourceType":"module"}