{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Clock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst Clock = props => {\n  _s();\n\n  const [progress, setProgress] = useState(1);\n  const pause = props;\n  React.useEffect(() => {\n    console.log(pause);\n\n    if (pause.params) {\n      const timer = setInterval(() => {\n        setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n      }, 800);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      width: \"60%\",\n      mr: 1,\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      minWidth: 35,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: `${Math.round(progress)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this); // LinearProgressWithLabel.propTypes = {\n  //   /**\n  //    * The value of the progress indicator for the determinate and buffer variants.\n  //    * Value between 0 and 100.\n  //    */\n  //   value: PropTypes.number.isRequired,\n  // };\n};\n\n_s(Clock, \"QN0tjA0AphYfLQtkI3ha+ziEe70=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Clock.jsx"],"names":["React","useState","useEffect","LinearProgress","Typography","Box","Clock","props","progress","setProgress","pause","console","log","params","timer","setInterval","prevProgress","clearInterval","Math","round"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAMS,KAAK,GAAGH,KAAd;AAEAP,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBS,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAGA,KAAK,CAACG,MAAT,EAAgB;AACd,YAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BN,QAAAA,WAAW,CAAEO,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,EAAtB,GAA2BA,YAAY,GAAG,CAA9D,CAAX;AACD,OAFwB,EAEtB,GAFsB,CAAzB;AAGA,aAAO,MAAM;AACXC,QAAAA,aAAa,CAACH,KAAD,CAAb;AACD,OAFD;AAGD;AAEF,GAXD,EAWG,EAXH;AAaA,sBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAwC,IAAA,cAAc,EAAC,QAAvD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAsC,QAAA,KAAK,EAAEN;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,EAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,kBAA+B,GAAEU,IAAI,CAACC,KAAL,CAC/BX,QAD+B,CAE/B;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAjBuB,CA+BvB;AACA;AACA;AACA;AACA;AACA;AACA;AAED,CAvCD;;GAAMF,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst Clock = (props) => {\n  const [progress, setProgress] = useState(1);\n  const pause = props;\n\n  React.useEffect(() => {\n    console.log(pause)\n    if(pause.params){\n      const timer = setInterval(() => {\n        setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1));\n      }, 800);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n    \n  }, []);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Box width=\"60%\" mr={1}>\n        <LinearProgress variant=\"determinate\" value={progress} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" >{`${Math.round(\n          progress,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n\n\n  // LinearProgressWithLabel.propTypes = {\n  //   /**\n  //    * The value of the progress indicator for the determinate and buffer variants.\n  //    * Value between 0 and 100.\n  //    */\n  //   value: PropTypes.number.isRequired,\n  // };\n\n};\n\nexport default Clock\n"]},"metadata":{},"sourceType":"module"}