{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Singup.jsx\";\nimport React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  paper: {\n    position: 'absolute',\n    width: 350,\n    top: 200,\n    left: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  wrap: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  }\n}));\n\nfunction Singup() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\" // onClick={handleOpen}\n      ,\n      variant: \"outlined\",\n      color: \"primary\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField // label=\"With normal TextField\"\n          , {\n            id: \"standard-start-adornment\",\n            placeholder: \"exaple@example.com\",\n            className: clsx(classes.margin, classes.textField) // InputProps={{\n            //   endAdornment: <InputAdornment position=\"end\">Login</InputAdornment>,\n            // }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: clsx(classes.margin, classes.withoutLabel, classes.textField),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-weight\",\n              value: values.weight,\n              placeholder: \"exaple@example.com\" // endAdornment={<InputAdornment position=\"end\">Email</InputAdornment>}\n              ,\n              \"aria-describedby\": \"standard-weight-helper-text\" // inputProps={{\n              //   'aria-label': 'weight',\n              // }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: clsx(classes.margin, classes.textField),\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"standard-adornment-password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-password\",\n              type: values.showPassword ? 'text' : 'password',\n              value: values.password,\n              onChange: handleChange('password'),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 63\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Singup;\nexport default Singup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Singup.jsx"],"names":["React","clsx","makeStyles","Button","Modal","Input","InputLabel","InputAdornment","FormControl","TextField","Visibility","VisibilityOff","FormHelperText","IconButton","useStyles","theme","root","margin","spacing","paper","position","width","top","left","backgroundColor","palette","background","border","boxShadow","shadows","padding","wrap","display","flexWrap","withoutLabel","marginTop","textField","Singup","open","handleClose","classes","values","weight","showPassword","password","handleChange","handleClickShowPassword","handleMouseDownPassword"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    position: 'absolute',\n    width: 350,\n    top: 200,\n    left: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  wrap: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\nfunction Singup(){\n  return(\n    <div>\n       <Button\n          type='button'\n          // onClick={handleOpen}\n          variant=\"outlined\" color=\"primary\">\n          Log In\n        </Button>\n        <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.paper}>\n          <div>\n            <TextField\n              // label=\"With normal TextField\"\n              id=\"standard-start-adornment\"\n              placeholder='exaple@example.com'\n              className={clsx(classes.margin, classes.textField)}\n              // InputProps={{\n              //   endAdornment: <InputAdornment position=\"end\">Login</InputAdornment>,\n              // }}\n            \n            />\n            <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\n              <Input\n                id=\"standard-adornment-weight\"\n                value={values.weight}\n                placeholder='exaple@example.com'\n                // endAdornment={<InputAdornment position=\"end\">Email</InputAdornment>}\n                aria-describedby=\"standard-weight-helper-text\"\n                // inputProps={{\n                //   'aria-label': 'weight',\n                // }}\n              />\n              {/* <FormHelperText id=\"standard-weight-helper-text\">Weight</FormHelperText> */}\n            </FormControl>\n            <FormControl className={clsx(classes.margin, classes.textField)}>\n              <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n              <Input\n                id=\"standard-adornment-password\"\n                type={values.showPassword ? 'text' : 'password'}\n                value={values.password}\n                onChange={handleChange('password')}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </div>\n        </div>\n      </Modal>\n    </div>\n\n  )\n}\n\nexport default Singup"]},"metadata":{},"sourceType":"module"}