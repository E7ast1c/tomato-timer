{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Register from \"./RegisterModal\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid `\n  },\n  toolbarButton: {\n    color: \"white\",\n    borderColor: \"white\",\n    marginLeft: \"1em\"\n  },\n  toolbarIcon: {\n    marginLeft: \"1em\",\n    marginRight: \"8em\"\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    overflowX: 'auto'\n  },\n  toolbarLink: {\n    flexShrink: 0\n  }\n}));\nexport default function Header(props) {\n  _s();\n\n  const [registerModal, setRegisterModal] = React.useState(false);\n  const [isLogIn, setIsLogIn] = React.useState(false);\n  const classes = useStyles();\n  const title = \"Tomato timer\";\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsxDEV(GitHubIcon, {\n        className: classes.toolbarIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.toolbarButton,\n        variant: \"outlined\",\n        size: \"small\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h2\",\n        variant: \"h5\" // color=\"inherit\"\n        ,\n        align: \"center\",\n        noWrap: true,\n        className: classes.toolbarTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbarSecondary,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.toolbarButton,\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: () => setIsLogIn(!isLogIn),\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.toolbarButton,\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: () => setRegisterModal(!registerModal),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), registerModal && /*#__PURE__*/_jsxDEV(Register, {\n      prop: {\n        registerModal,\n        setRegisterModal\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"hM7ifsAk12u3jWNn/PecjpjNU0k=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Header/Header.jsx"],"names":["React","useState","makeStyles","Toolbar","Button","Typography","GitHubIcon","Register","useStyles","theme","toolbar","borderBottom","toolbarButton","color","borderColor","marginLeft","toolbarIcon","marginRight","toolbarTitle","flex","toolbarSecondary","overflowX","toolbarLink","flexShrink","Header","props","registerModal","setRegisterModal","isLogIn","setIsLogIn","classes","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Register from \"./RegisterModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid `\n  },\n  toolbarButton: {\n    color: \"white\",\n    borderColor: \"white\",\n    marginLeft: \"1em\",\n  },\n  toolbarIcon: {\n    marginLeft: \"1em\",\n    marginRight: \"8em\",\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    flexShrink: 0,\n  },\n}));\n\nexport default function Header(props) {\n  const [registerModal, setRegisterModal] = React.useState(false);\n  const [isLogIn, setIsLogIn] = React.useState(false);\n  const classes = useStyles();\n  const title = \"Tomato timer\";\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <GitHubIcon className={classes.toolbarIcon} />\n        <Button className={classes.toolbarButton} variant=\"outlined\" size=\"small\"\n        >\n          Settings\n        </Button>\n\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          // color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n\n\n        <Toolbar className={classes.toolbarSecondary}>\n          <Button className={classes.toolbarButton} variant=\"outlined\" size=\"small\"\n            onClick={() => setIsLogIn(!isLogIn)} >\n            Log in\n        </Button>\n          <Button className={classes.toolbarButton} variant=\"outlined\" size=\"small\"\n            onClick={() => setRegisterModal(!registerModal)} >\n            Register\n        </Button>\n        </Toolbar>\n      </Toolbar>\n      {registerModal && <Register prop={{ registerModal, setRegisterModal }} />}\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}