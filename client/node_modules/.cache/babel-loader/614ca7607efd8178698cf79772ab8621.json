{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Clock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst Clock = props => {\n  _s();\n\n  const [currentCount, setCount] = useState(10);\n\n  const timer = () => setCount(currentCount - 1);\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      return;\n    }\n\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, [currentCount]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      width: \"60%\",\n      mr: 1,\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      minWidth: 35,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this); // LinearProgressWithLabel.propTypes = {\n  //   /**\n  //    * The value of the progress indicator for the determinate and buffer variants.\n  //    * Value between 0 and 100.\n  //    */\n  //   value: PropTypes.number.isRequired,\n  // };\n};\n\n_s(Clock, \"IMfPDr4HP4VZftxIKYb1PRi6LuY=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Clock.jsx"],"names":["React","useState","useEffect","LinearProgress","Typography","Box","Clock","props","currentCount","setCount","timer","id","setInterval","clearInterval","Math","round","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMS,KAAK,GAAG,MAAMD,QAAQ,CAACD,YAAY,GAAG,CAAhB,CAA5B;;AAEAN,EAAAA,SAAS,CACL,MAAM;AACF,QAAIM,YAAY,IAAI,CAApB,EAAuB;AACnB;AACH;;AACD,UAAMG,EAAE,GAAGC,WAAW,CAACF,KAAD,EAAQ,IAAR,CAAtB;AACA,WAAO,MAAMG,aAAa,CAACF,EAAD,CAA1B;AACH,GAPI,EAQL,CAACH,YAAD,CARK,CAAT;AAYA,sBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAwC,IAAA,cAAc,EAAC,QAAvD;AAAA,4BACA,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAA,WAA0CD;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,EAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,kBAA+B,GAAEO,IAAI,CAACC,KAAL,CAC/BR,KAAK,CAACS,KADyB,CAE/B;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAhBqB,CA8BrB;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAtCD;;GAAMV,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst Clock = (props) => {\n    const [currentCount, setCount] = useState(10);\n    const timer = () => setCount(currentCount - 1);\n\n    useEffect(\n        () => {\n            if (currentCount <= 0) {\n                return;\n            }\n            const id = setInterval(timer, 1000);\n            return () => clearInterval(id);\n        },\n        [currentCount]\n    );\n    \n   \n    return (\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Box width=\"60%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" >{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n    )\n\n\n    // LinearProgressWithLabel.propTypes = {\n    //   /**\n    //    * The value of the progress indicator for the determinate and buffer variants.\n    //    * Value between 0 and 100.\n    //    */\n    //   value: PropTypes.number.isRequired,\n    // };\n\n};\n\nexport default Clock\n"]},"metadata":{},"sourceType":"module"}