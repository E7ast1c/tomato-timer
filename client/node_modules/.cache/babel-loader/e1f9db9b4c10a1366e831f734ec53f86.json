{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Singup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  btn: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  paper: {\n    position: 'absolute',\n    width: 310,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  wrap: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  }\n}));\n\nfunction Singup() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleOpenSingUp = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: handleOpenSingUp,\n      variant: \"outlined\",\n      color: \"secondary\",\n      children: \"Sing Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: clsx(classes.margin, classes.withoutLabel, classes.textField),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-weight\",\n              value: values.weight,\n              placeholder: \"Login\" // endAdornment={<InputAdornment position=\"end\">Email</InputAdornment>}\n              ,\n              \"aria-describedby\": \"standard-weight-helper-text\" // inputProps={{\n              //   'aria-label': 'weight',\n              // }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-start-adornment\",\n            placeholder: \"exaple@example.com\",\n            className: clsx(classes.margin, classes.textField)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: clsx(classes.margin, classes.textField),\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"standard-adornment-password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-password\",\n              type: values.showPassword ? 'text' : 'password',\n              value: values.password,\n              onChange: handleChange('password'),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 63\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.btn,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Singup, \"wWFfkWaLgudypPVGbC4Jii3V/aY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Singup;\nexport default Singup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Singup.jsx"],"names":["React","clsx","makeStyles","Button","Modal","Input","InputLabel","InputAdornment","FormControl","TextField","Visibility","VisibilityOff","FormHelperText","IconButton","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","root","margin","spacing","btn","display","justifyContent","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","wrap","flexWrap","withoutLabel","marginTop","textField","Singup","open","setOpen","useState","classes","values","setValues","password","weight","weightRange","showPassword","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","handleOpenSingUp","handleClose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  btn: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  paper: {\n    position: 'absolute',\n    width: 310,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  wrap: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\nfunction Singup() {\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleOpenSingUp = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        type='button'\n        onClick={handleOpenSingUp}\n        variant=\"outlined\"\n        color=\"secondary\">\n        Sing Up\n        </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div  className={classes.paper}>\n          <div >\n            <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\n              <Input\n                id=\"standard-adornment-weight\"\n                value={values.weight}\n                placeholder='Login'\n                // endAdornment={<InputAdornment position=\"end\">Email</InputAdornment>}\n                aria-describedby=\"standard-weight-helper-text\"\n              // inputProps={{\n              //   'aria-label': 'weight',\n              // }}\n              />\n              {/* <FormHelperText id=\"standard-weight-helper-text\">Weight</FormHelperText> */}\n            </FormControl>\n            <TextField\n              id=\"standard-start-adornment\"\n              placeholder='exaple@example.com'\n              className={clsx(classes.margin, classes.textField)}\n            />\n            <FormControl className={clsx(classes.margin, classes.textField)}>\n              <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n              <Input\n                id=\"standard-adornment-password\"\n                type={values.showPassword ? 'text' : 'password'}\n                value={values.password}\n                onChange={handleChange('password')}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            <div className={classes.btn}>\n              <Button>Ok</Button>\n              <Button\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n\n  )\n}\n\nexport default Singup"]},"metadata":{},"sourceType":"module"}