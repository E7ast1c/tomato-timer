{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macuser/tomato-timer/client/src/components/Start.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, Text, Dimensions } from \"react-native\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\nconsole.log(window);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    // left: screenWidth / 2,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nconst [dimensions, setDimensions] = useState({\n  window,\n  screen\n});\n\nconst onChange = ({\n  window,\n  screen\n}) => {\n  setDimensions({\n    window,\n    screen\n  });\n};\n\nuseEffect(() => {\n  Dimensions.addEventListener(\"change\", onChange);\n  return () => {\n    Dimensions.removeEventListener(\"change\", onChange);\n  };\n});\n\nfunction Start() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"simple-modal-title\",\n      children: \"Text in a modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"simple-modal-description\",\n      children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(View, {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: `Window Dimensions: height - ${dimensions.window.height}, width - ${dimensions.window.width}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: `Screen Dimensions: height - ${dimensions.screen.height}, width - ${dimensions.screen.width}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Start, \"sAdzNhf/eEVWcoR6sLHcRgUAoMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Start;\nexport default Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/macuser/tomato-timer/client/src/components/Start.jsx"],"names":["React","useState","useEffect","View","StyleSheet","Text","Dimensions","makeStyles","Button","Modal","window","get","screen","console","log","useStyles","theme","root","margin","spacing","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","dimensions","setDimensions","onChange","addEventListener","removeEventListener","Start","open","setOpen","classes","handleOpen","handleClose","body","styles","container","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, Text, Dimensions } from \"react-native\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nconsole.log(window);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    // left: screenWidth / 2,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst [dimensions, setDimensions] = useState({ window, screen });\n\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n\n\nfunction Start(){\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  \n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div  className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p>\n    </div>\n  );\n\n  return(\n      <div className={classes.root}>\n        {/* <Button \n          type='button'\n          onClick={handleOpen}\n          variant=\"outlined\" color=\"primary\">\n            Log In\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\">\n            Sing Up\n        </Button>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          >\n            {body}\n        </Modal> */}\n        <View style={styles.container}>\n          <Text>{`Window Dimensions: height - ${dimensions.window.height}, width - ${dimensions.window.width}`}</Text>\n          <Text>{`Screen Dimensions: height - ${dimensions.screen.height}, width - ${dimensions.screen.width}`}</Text>\n        </View>\n    </div>\n\n  )\n}\n\nexport default Start"]},"metadata":{},"sourceType":"module"}